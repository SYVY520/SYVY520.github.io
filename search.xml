<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS提升</title>
    <url>/CSS%E6%8F%90%E5%8D%87/</url>
    <content><![CDATA[<h1 id="vertical-align属性应用只针对行内元素或者行内块元素垂直对齐"><a class="anchor" href="#vertical-align属性应用只针对行内元素或者行内块元素垂直对齐">#</a> vertical-align 属性应用【只针对行内元素或者行内块元素】垂直对齐</h1>
<p>1. 设置图片或者表单（行内块元素）和文字垂直对齐<br />
 2.vertical-align: baseline |  top  |  middle  |  bottom</p>
<h2 id="解决图片底部默认空白缝隙问题"><a class="anchor" href="#解决图片底部默认空白缝隙问题">#</a> 解决图片底部默认空白缝隙问题</h2>
<p>1. 给图片添加 vertical-align: baseline |  top  |  middle  |  bottom 等。（推荐使用）<br />
2. 把图片转换为块级元素 display:block;</p>
<h1 id="溢出的文字省略号显示"><a class="anchor" href="#溢出的文字省略号显示">#</a> 溢出的文字省略号显示</h1>
<h2 id="单行文本溢出显示省略号"><a class="anchor" href="#单行文本溢出显示省略号">#</a> 单行文本溢出显示省略号</h2>
<p>1. 先强制一行内显示文本 white-space:nowrap;<br />
2. 超出的部分隐藏 overflow:hidden;<br />
3. 文本用省略号替代超出的部分 text-overflow:ellipsis;</p>
<h2 id="多行文本溢出显示省略号兼容性问题适用于webkit浏览器或移动端"><a class="anchor" href="#多行文本溢出显示省略号兼容性问题适用于webkit浏览器或移动端">#</a> 多行文本溢出显示省略号【兼容性问题，适用于 webKit 浏览器或移动端】</h2>
<p>overflow:hidden;<br />
text-overflow:ellipsis;<br />
 弹性伸缩盒子模型显示 display:-webkit-box;<br />
 限制在一个块元素显示的文本的行数 - webkit-line-clamp:2;<br />
 设置或检索伸缩盒对象的子元素的排列方式 - webkit-box-orient:vertical;</p>
<h1 id="css三角"><a class="anchor" href="#css三角">#</a> CSS 三角</h1>
<p>div{<br />
width:0;<br />
height:0;<br />
line-height:0;<br />
font-size:0;<br />
border:50px solid transparent;<br />
border-left-color:pink;<br />
}</p>
<h1 id="css三角强化"><a class="anchor" href="#css三角强化">#</a> CSS 三角强化</h1>
<p>width:0;<br />
height:0;<br />
border-color: transparent red transparent transparent;<br />
border-style:solid;<br />
border-width:22px 8px 0 0;</p>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS定位及浮动</title>
    <url>/CSS%E5%AE%9A%E4%BD%8D%E5%8F%8A%E6%B5%AE%E5%8A%A8/</url>
    <content><![CDATA[<h1 id="定位叠放次序选择器-z-index-1"><a class="anchor" href="#定位叠放次序选择器-z-index-1">#</a> 定位叠放次序【选择器 {z-index: 1;}】</h1>
<p>1. 默认 auto，数值可以是正整数、负数或者 0，数值越大，盒子越靠上。<br />
2. 如果属性值相同，按照书写顺序，后来居上<br />
 3. 只有定位的盒子才有 z-index 属性</p>
<h1 id="定位特殊特性"><a class="anchor" href="#定位特殊特性">#</a> 定位特殊特性</h1>
<p>1. 行内元素添加绝对或者固定定位，可以直接设置高度和宽度。<br />
2. 块级元素添加绝对或者固定定位，如果不给宽度和高度，默认大小是内容的大小。</p>
<h1 id="相对定位"><a class="anchor" href="#相对定位">#</a> 相对定位</h1>
<p>选择器 {position: relative;}<br />
 1. 相对于自己原来的位置移动<br />
 2. 不脱标，继续保留原来位置</p>
<h1 id="绝对定位"><a class="anchor" href="#绝对定位">#</a> 绝对定位</h1>
<p>选择器 {position: absolute;}<br />
 1. 如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位。<br />
2. 如果祖先元素有定位（相对，绝对，固定定位），则以最近一级的有定位祖先元素为参考点移动位置。<br />
3. 绝对定位不再占有原先的位置。（脱标）</p>
<h2 id="水平居中"><a class="anchor" href="#水平居中">#</a> 水平居中</h2>
<p>加了绝对定位的盒子不能通过 margin:0 auto 水平居中，但是可以通过以下计算方法实现水平和垂直居中<br />
①left:50%;【让盒子左侧移动到父级元素的水平中心位置】<br />
②margin-left:100%;【让盒子向左移动自身宽度的一半】</p>
<h1 id="固定定位"><a class="anchor" href="#固定定位">#</a> 固定定位</h1>
<p>选择器 {position: fixed;}<br />
 1. 以浏览器的可视窗户为参照点移动元素，跟父元素没有任何关系。<br />
2. 不能随滚动条滚动。<br />
3. 固定定位不再占有原先的位置</p>
<h2 id="固定在版心右侧位置"><a class="anchor" href="#固定在版心右侧位置">#</a> 固定在版心右侧位置</h2>
<p>小算法：<br />
①让固定定位盒子 left:50% 走到浏览器可视区（也可以看做版心）的一半位置。<br />
②让固定定位的盒子 margin-left: 版心宽度的一半距离。多走版心宽度的一半位置，就可以让固定定位的盒子贴着版心右侧对齐了。</p>
<h1 id="绝对定位固定定位会完全压住盒子"><a class="anchor" href="#绝对定位固定定位会完全压住盒子">#</a> 绝对定位（固定定位）会完全压住盒子</h1>
<p>1. 浮动元素会压住标准流盒子，不会压住盒子里面的文字（图片）。<br />
2. 绝对定位（固定定位）会压住下面标准流所有的内容。</p>
<h1 id="脱标的盒子不会触发外边距塌陷"><a class="anchor" href="#脱标的盒子不会触发外边距塌陷">#</a> 脱标的盒子不会触发外边距塌陷</h1>
<p>浮动元素、绝对定位（固定定位）元素都不会触发外边距合并的问题。</p>
<h1 id="粘性定位ie不支持"><a class="anchor" href="#粘性定位ie不支持">#</a> 粘性定位【IE 不支持】</h1>
<p>选择器 {position: sticky;    top: 10px;}<br />
 1. 以浏览器的可视窗户为参照点移动元素。<br />
2. 占有原先的位置。<br />
3. 必须添加 top、left、right、bottom 其中一个才有效。</p>
<h1 id="静态定位标准流"><a class="anchor" href="#静态定位标准流">#</a> 静态定位【标准流】</h1>
<p position:="" static;="">选择器</p>
<h1 id="浮动选择器-float属性值-影响后面的标准流"><a class="anchor" href="#浮动选择器-float属性值-影响后面的标准流">#</a> 浮动【选择器 {float: 属性值；}】【影响后面的标准流】</h1>
<p>浮动特性【左右对齐以父盒子为准】：<br />
①浮动元素会脱离标准流（脱标）<br />
②浮动的元素会一行内显示并且元素顶部对齐【父级宽度装不下会另起一行显示】<br />
③浮动的元素会具有行内块元素的特性【大小根据内容决定，盒子之间没有缝隙】</p>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS清除浮动</title>
    <url>/CSS%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/</url>
    <content><![CDATA[<h1 id="父级添加双伪元素"><a class="anchor" href="#父级添加双伪元素">#</a> 父级添加双伪元素</h1>
<p>.clearfix:before,.clearfix:after{<br />
content:&quot;&quot;;<br />
display:table;<br />
}<br />
.clearfix:after{<br />
clear:both;<br />
}<br />
.clearfix{<br />
*zoom:1;<br />
}</p>
<h1 id="父级添加overflow属性"><a class="anchor" href="#父级添加overflow属性">#</a> 父级添加 overflow 属性</h1>
<p>overflow: hidden;【无法显示溢出盒子部分】</p>
<h1 id="父级添加after伪元素"><a class="anchor" href="#父级添加after伪元素">#</a> 父级添加 after 伪元素</h1>
<p>.clearfix:after{<br />
content:&quot;&quot;;<br />
display:block;<br />
height:0;<br />
clear:both;<br />
visibility:hidden;<br />
}<br />
.clearfix{<br />
*zoom:1;<br />
}</p>
<h1 id="额外标签法隔墙法"><a class="anchor" href="#额外标签法隔墙法">#</a> 额外标签法【隔墙法】</h1>
<p>在浮动元素末尾添加一个空的标签。例如 <div style="clear:both"></div> ，或者其他标签（如<br/>等）【必须为块级元素】。</p>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS盒子模型</title>
    <url>/CSS%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="外边距margin"><a class="anchor" href="#外边距margin">#</a> 外边距（margin）</h1>
<p>1. 盒子与盒子之间距离<br />
 2. 水平居中：<br />
①盒子必须指定了宽度 (width)。<br />
②盒子左右的外边距都设置为 auto。<br />
【margin:auto;/margin-left:auto;margin-right:auto;/margin: 0 auto;】</p>
<h2 id="外边距合并"><a class="anchor" href="#外边距合并">#</a> 外边距合并</h2>
<p>1. 只为一个盒子设置外边距<br />
 2. 父元素塌陷<br />
①可以为父元素定义上边框<br />
②可以为父元素定义上内边距<br />
③可以为父元素添加 overflow:hidden;</p>
<h1 id="内边距padding"><a class="anchor" href="#内边距padding">#</a> 内边距（padding）</h1>
<p>没有指定 width/height，padding 不会撑大盒子</p>
<h1 id="边框border"><a class="anchor" href="#边框border">#</a> 边框（border）</h1>
<p>1.border  :  border-width【宽度】 ||   border-style 【样式】   ||    border-color【颜色】（没有顺序）<br />
2.border-top/bottom/left/right:【具有层叠性】<br />
3.solid【实线边框】   dashed【虚线边框】   dotted【点线边框】<br />
4.border-collapse:  collapse;【合并，表示相邻边框合并在一起】</p>
<h1 id="css3盒子模型"><a class="anchor" href="#css3盒子模型">#</a> CSS3 盒子模型</h1>
<p>box-sizing:content-box 盒子大小为 width+padding+border<br />
box-sizing:border-box 盒子大小为 width</p>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS的元素显示模式</title>
    <url>/CSS%E7%9A%84%E5%85%83%E7%B4%A0%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="行内块元素"><a class="anchor" href="#行内块元素">#</a> 行内块元素</h1>
<p>1.{<img />   <input  />   <td>}<br />
 2. 水平居中：父元素添加 text-align:center;</p>
<h1 id="行内元素内联元素高-宽直接设置是无效的只能容纳文本或其他行内元素水平居中"><a class="anchor" href="#行内元素内联元素高-宽直接设置是无效的只能容纳文本或其他行内元素水平居中">#</a> 行内元素【内联元素】【高、宽直接设置是无效的】【只能容纳文本或其他行内元素】水平居中</h1>
<p>1.{<a>  <strong>  <b>   <em>   <i>   <del>   <s>    <ins>   <u>   <span>}<br />
 2. 特殊情况链接<a>可以放块级元素，不可以再放链接<br />
 3. 水平居中：父元素添加 text-align:center;</p>
<h1 id="块元素"><a class="anchor" href="#块元素">#</a> 块元素</h1>
<p>{<h1>~<h6>    <p>    <div>      <ul>  <ol>    <li>}</p>
<h1 id="元素显示模式转换"><a class="anchor" href="#元素显示模式转换">#</a> 元素显示模式转换</h1>
<p>1. 转换为块元素：display:block;<br />
2. 转换为行内元素：display:inline;<br />
3. 转换为行内块：display:inline-block;</p>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>css选择器及优先级</title>
    <url>/CSS%E9%80%89%E6%8B%A9%E5%99%A8%E5%8F%8A%E4%BC%98%E5%85%88%E7%BA%A7/</url>
    <content><![CDATA[<h1 id="后代选择器"><a class="anchor" href="#后代选择器">#</a> 后代选择器</h1>
<p 样式声明="">元素 1  元素 2【后代】  </p>
<h1 id="子选择器"><a class="anchor" href="#子选择器">#</a> 子选择器</h1>
<p 样式声明="">元素 1 &gt; 元素 2【儿子】  </p>
<h1 id="并集选择器"><a class="anchor" href="#并集选择器">#</a> 并集选择器</h1>
<p>元素 1 ， 元素 2   {样式声明}【可以选择多组标签】</p>
<h1 id="伪类选择器"><a class="anchor" href="#伪类选择器">#</a> 伪类选择器</h1>
<h2 id="链接伪类选择器"><a class="anchor" href="#链接伪类选择器">#</a> 链接伪类选择器</h2>
<p>顺序不可颠倒，链接样式单独修改<br />
 a {}<br />
 a:hover【选择鼠标指针位于其上的链接】</p>
<h2 id="focus伪类选择器"><a class="anchor" href="#focus伪类选择器">#</a> :focus 伪类选择器</h2>
<p>input:focus{<br />
background-color:yellow;<br />
}</p>
<h1 id="优先级"><a class="anchor" href="#优先级">#</a> 优先级</h1>
<p>继承 或者 * &lt; 元素选择器 &lt; 类选择器，伪类选择器 &lt; ID 选择器 &lt; 行内样式 style=&quot;&quot; &lt; !important【重要的】</p>
]]></content>
      <categories>
        <category>前端学习</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建：配置【主题：shoka】</title>
    <url>/blog/</url>
    <content><![CDATA[<h1 id="事件起因"><a class="anchor" href="#事件起因">#</a> 事件起因</h1>
<details class="info"><summary>作为一个从未搭建过博客的小白，第一次搭建博客部署主题就对shoka主题惊为天人，开始了搭建博客的过程。然而搭建博客的过程繁琐而复杂，shoka主题也有很多整不清楚的地方，在查找了大量教程之后，基本实现了shoka主题的一些功能。</summary><div>
</div></details>
<h1 id="搭建博客"><a class="anchor" href="#搭建博客">#</a> 搭建博客</h1>
<div class="note default">
<p>个人博客基础配置建议看教程：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLm1vZWh6LmNvbS9hcmNoaXZlcy9oZXhvLXM=">https://blog.moehz.com/archives/hexo-s</span></p>
</div>
<div class="note default">
<p>我们先按照该教程 —— 注册 GitHub【第 1 篇】, 安装 git【第 2 篇】，绑定 GitHub 并提交文件【第 3 篇】</p>
</div>
<div class="note default">
<p>购买域名【第 4 篇】和解析域名【第 6 篇】—— 可以暂时不操作，等到博客部署成功后再操作</p>
</div>
<div class="note default">
<p>安装 node.js 和 Hexo【第 5 篇】，至于第 7 篇、第 8 篇略过<br />
 1. 安装 nodejs 步骤：在系统变量中新建一个变量名为 “NODE_PATH”【路径应该修改为 “D:\nodejs\node_modules”】<br />
2. 安装 Hexo 步骤：文件底部内容应改为：【注意空格】</p>
</div>
<figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre>deploy<span class="token operator">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>  type<span class="token operator">:</span> git</pre></td></tr><tr><td data-num="3"></td><td><pre>  repo<span class="token operator">:</span> git<span class="token annotation punctuation">@github.com</span><span class="token operator">:</span><span class="token constant">SYVY520</span><span class="token operator">/</span><span class="token constant">SYVY520</span><span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token punctuation">.</span>git #你的仓库地址</pre></td></tr><tr><td data-num="4"></td><td><pre>  branch<span class="token operator">:</span> main</pre></td></tr></table></figure><h1 id="部署博客"><a class="anchor" href="#部署博客">#</a> 部署博客</h1>
<div class="note default">
<p>shoka 主题基础部署建议看教程：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLm1vZWh6LmNvbS9hcmNoaXZlcy9oZXhvLXNob2thLWJ1aWxkLmh0bWw=">https://blog.moehz.com/archives/hexo-shoka-build.html</span></p>
</div>
<div class="note default">
<p>shoka 主题后续详情搭建建议看教程：<span class="exturl" data-url="aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</span><br />
shoka 主题功能介绍补充点：<span class="exturl" data-url="aHR0cHM6Ly93d3cucmV2ZXJzZXNhY2xlLmNvbS9TdXBwbGVtZW50LWZvci1zaG9rYS10aGVtZS8=">https://www.reversesacle.com/Supplement-for-shoka-theme/</span><br />
 两者建议同时看❤️</p>
</div>
<div class="note default">
<p>Algolia 实现搜索功能补充点：<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MTczNDA0L2FydGljbGUvZGV0YWlscy8xMjI4NjEzMjE=">https://blog.csdn.net/qq_45173404/article/details/122861321</span><br />
 评论区基本功能：<span class="exturl" data-url="aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==">https://valine.js.org/quickstart.html</span> 【笔者注册的是国内版本】<br />
评论区基本功能：<span class="exturl" data-url="aHR0cHM6Ly93d3cucmV2ZXJzZXNhY2xlLmNvbS9Db21wdXRlci1zY2llbmNlL1Nob2thLVRoZW1lL0NvbW1lbnQv">https://www.reversesacle.com/Computer-science/Shoka-Theme/Comment/</span><br />
 评论区基本功能：<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDYxNjYzNDU=">https://zhuanlan.zhihu.com/p/106166345</span><br />
 评论区三者建议同时看❤️</p>
</div>
<div class="note default">
<p>shoka 额外添加配置：<span class="exturl" data-url="aHR0cHM6Ly93d3cucmV2ZXJzZXNhY2xlLmNvbS9Db21wdXRlci1zY2llbmNlL1Nob2thLVRoZW1lL0Fub3RoZXIv">https://www.reversesacle.com/Computer-science/Shoka-Theme/Another/</span><br />
 主要图片及图床配置： <span class="exturl" data-url="aHR0cHM6Ly93d3cucmV2ZXJzZXNhY2xlLmNvbS9Db21wdXRlci1zY2llbmNlL1Nob2thLVRoZW1lL0ltYWdlLw==">https://www.reversesacle.com/Computer-science/Shoka-Theme/Image/</span><br />
shoka 额外添加配置：<span class="exturl" data-url="aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi9jYXRlZ29yaWVzL1NIT0tBLw==">https://www.lavenderdh.cn/categories/SHOKA/</span></p>
</div>
<h1 id="小细节"><a class="anchor" href="#小细节">#</a> 小细节</h1>
<div class="note default">
<p>“about” 这个界面在哪个文件里面做的？<br />
在 Blog\source 中新建一个文件夹取名 about，然后在里面建立一个 index.md 作为 about 页面内容。</p>
</div>
]]></content>
  </entry>
</search>
